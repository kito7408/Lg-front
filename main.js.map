{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/beacon.service.ts","webpack:///./src/app/beacon.ts","webpack:///./src/app/beacon/beacon.component.css","webpack:///./src/app/beacon/beacon.component.html","webpack:///./src/app/beacon/beacon.component.ts","webpack:///./src/app/category.service.ts","webpack:///./src/app/category.ts","webpack:///./src/app/category/category.component.css","webpack:///./src/app/category/category.component.html","webpack:///./src/app/category/category.component.ts","webpack:///./src/app/inicio/inicio.component.css","webpack:///./src/app/inicio/inicio.component.html","webpack:///./src/app/inicio/inicio.component.ts","webpack:///./src/app/prediction.service.ts","webpack:///./src/app/prediction.ts","webpack:///./src/app/prediction/prediction.component.css","webpack:///./src/app/prediction/prediction.component.html","webpack:///./src/app/prediction/prediction.component.ts","webpack:///./src/app/product.service.ts","webpack:///./src/app/product.ts","webpack:///./src/app/product/product.component.css","webpack:///./src/app/product/product.component.html","webpack:///./src/app/product/product.component.ts","webpack:///./src/app/user.service.ts","webpack:///./src/app/user.ts","webpack:///./src/app/user/user.component.css","webpack:///./src/app/user/user.component.html","webpack:///./src/app/user/user.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { ProductComponent } from './product/product.component';\nimport { UserComponent } from './user/user.component';\nimport { CategoryComponent } from './category/category.component';\nimport { PredictionComponent } from './prediction/prediction.component';\nimport { BeaconComponent } from './beacon/beacon.component';\nimport { InicioComponent } from './inicio/inicio.component';\n\n\n\nconst routes: Routes = [\n  { path: '', redirectTo: '/inicio', pathMatch: 'full' },\n  { path: 'inicio', component: InicioComponent},\n  { path: 'products', component: ProductComponent},\n  { path: 'users', component: UserComponent},\n  { path: 'categories', component: CategoryComponent},\n  { path: 'predictions', component: PredictionComponent},\n  { path: 'beacons', component: BeaconComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }","module.exports = \"\"","module.exports = \"<nav>\\n  <a class=\\\"btn btn-info\\\" routerLink=\\\"/inicio\\\">Login</a>\\n  <!--<a class=\\\"btn btn-info\\\" routerLink=\\\"/users\\\">Users</a>-->\\n  <a class=\\\"btn btn-info\\\" routerLink=\\\"/products\\\">Products</a>\\n  <a class=\\\"btn btn-info\\\" routerLink=\\\"/categories\\\">Categories</a>\\n  <!--<a class=\\\"btn btn-info\\\" routerLink=\\\"/predictions\\\">Predictions</a>-->\\n  <a class=\\\"btn btn-info\\\" routerLink=\\\"/beacons\\\">Beacons</a>\\n</nav>\\n<router-outlet></router-outlet>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  \n}\n","import { UserService } from './user.service';\nimport { ProductService } from './product.service';\nimport { CategoryService } from './category.service';\nimport { BeaconService } from './beacon.service';\nimport { PredictionService } from './prediction.service';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms'; // <-- NgModel lives here\n\nimport { AppComponent } from './app.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AppRoutingModule } from './/app-routing.module';\nimport { ProductComponent } from './product/product.component';\nimport { UserComponent } from './user/user.component';\nimport { CategoryComponent } from './category/category.component';\nimport { InicioComponent } from './inicio/inicio.component';\nimport { PredictionComponent } from './prediction/prediction.component';\nimport { BeaconComponent } from './beacon/beacon.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ProductComponent,\n    UserComponent,\n    CategoryComponent,\n    InicioComponent,\n    PredictionComponent,\n    BeaconComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpClientModule,\n    AppRoutingModule,\n  ],\n  providers: [UserService,ProductService,CategoryService,BeaconService,PredictionService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient,HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Beacon } from './beacon';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BeaconService {\n\n  private url = 'http://35.231.37.9/api/beacons/';\n\n  constructor(private http: HttpClient) { }\n\n  getAll(): Observable<Beacon[]>{\n    \n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Authorization': sessionStorage.getItem(\"token\"),\n        'Content-Type': 'application/x-www-form-urlencoded'\n      })\n    };\n\n    return this.http.get<Beacon[]>(this.url, httpOptions);\n  }\n\n  getById(uuid: string): Observable<Beacon> {\n\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Authorization': sessionStorage.getItem(\"token\"),\n        'Content-Type': 'application/x-www-form-urlencoded'\n      })\n    };\n\n    const newUrl = this.url + uuid;\n    return this.http.get<Beacon>(newUrl,httpOptions);\n  }\n\n  save(beacon: Beacon):Observable<Beacon>{\n\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Authorization': sessionStorage.getItem(\"token\"),\n        'Content-Type': 'application/json'\n      })\n    };\n\n    const newUrl = this.url + 'create';\n    return this.http.post<Beacon>(newUrl,beacon,httpOptions);\n  }\n}\n","export class Beacon{\n    id: number;\n    UUID: string;\n    major: string;\n    minor: string;\n    state: string;\n}","module.exports = \"\"","module.exports = \"<div class=\\\"conteiner\\\">\\n    <h2>Add Beacon</h2>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col\\\">\\n        <div>\\n          <label>UUID:\\n            <input #uuid />\\n          </label>\\n        </div>\\n        <div>\\n          <label>Major:\\n            <input #major />\\n          </label>\\n        </div>\\n        <div>\\n          <label>Minor:\\n            <input #minor />\\n          </label>\\n        </div>\\n        <div>\\n          <label>Activo:\\n            <select  #activo>\\n              <option value=\\\"1\\\">true</option>\\n              <option value=\\\"0\\\">false</option>\\n            </select>\\n          </label>\\n        </div>\\n  \\n        <button class=\\\"btn btn-primary\\\" \\n        (click)=\\\"save(uuid.value,major.value,minor.value,activo.value);\\n        uuid.value='';major.value='';minor.value='';\\\">\\n          Add\\n        </button>\\n      </div>\\n  \\n      <div class=\\\"col card\\\" *ngIf=\\\"select\\\">\\n        <h2>Beacon Info</h2>\\n        <ul>\\n          <li><strong>Id:</strong> {{beacon.id}}</li>\\n          <li><strong>UUID:</strong> {{beacon.UUID}}</li>\\n          <li><strong>Major:</strong> {{beacon.major}}</li>\\n          <li><strong>Minor:</strong> {{beacon.minor}}</li>\\n          <li><strong>Activo:</strong> {{beacon.state}}</li>\\n        </ul>\\n      </div>\\n    </div>\\n  \\n    <h2>Beacon List</h2>\\n  \\n    <table class=\\\"table\\\" *ngIf=\\\"beacons\\\">\\n      <tr>\\n        <th scope=\\\"col\\\">Id</th>\\n        <th scope=\\\"col\\\">UUID</th>\\n        <th scope=\\\"col\\\">Major</th>\\n        <th scope=\\\"col\\\">Minor</th>\\n        <th scope=\\\"col\\\">Activo</th>\\n      </tr>\\n      <tr *ngFor=\\\"let beacon of beacons.data\\\" (click)=\\\"selectedItem(beacon.UUID)\\\">\\n        <td scope=\\\"row\\\">{{beacon.id}}</td>\\n        <td>{{beacon.UUID}}</td>\\n        <td>{{beacon.major}}</td>\\n        <td>{{beacon.minor}}</td>\\n        <td>{{beacon.state}}</td>\\n      </tr>\\n    </table>\\n  </div>\"","import { Component, OnInit } from '@angular/core';\nimport { Beacon } from '../beacon';\nimport { BeaconService } from '../beacon.service';\n\n@Component({\n  selector: 'app-beacon',\n  templateUrl: './beacon.component.html',\n  styleUrls: ['./beacon.component.css']\n})\nexport class BeaconComponent implements OnInit {\n\n  beacons: Beacon[];\n  select: boolean;\n  beacon: Beacon;\n  newBeacon: Beacon;\n\n  constructor(private service: BeaconService) { }\n\n  ngOnInit() {\n    this.select=false;\n    this.beacon=null;\n    this.newBeacon=new Beacon;\n    this.getAll();\n  }\n\n  getAll(): void {\n    this.service.getAll()\n    .subscribe(data => this.beacons=data);\n  }\n\n  selectedItem(uuid: string): void {\n    this.service.getById(uuid)\n    .subscribe(data => {\n      console.log(data);\n      this.beacon=data;\n      this.select=true;\n    });\n  }\n\n  save(uuid: string, major: string, minor: string, state: string): void{\n    this.newBeacon.UUID=uuid;\n    this.newBeacon.major=major;\n    this.newBeacon.minor=minor;\n    this.newBeacon.state=state;\n    this.service.save(this.newBeacon)\n    .subscribe(data => this.getAll());\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient,HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Category } from './category';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CategoryService {\n\n  private url = 'http://35.231.37.9/api/categories';\n\n  constructor(private http: HttpClient) { }\n\n  getAll(): Observable<Category[]> {\n    return this.http.get<Category[]>(this.url);\n  }\n\n  getById(id: number): Observable<Category> {\n\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Authorization': sessionStorage.getItem(\"token\"),\n        'Content-Type': 'application/x-www-form-urlencoded'\n      })\n    };\n\n    const newUrl = this.url + '/' + id;\n    return this.http.get<Category>(newUrl,httpOptions);\n  }\n\n  save(category: Category): Observable<Category> {\n\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Authorization': sessionStorage.getItem(\"token\"),\n        'Content-Type': 'application/json'\n      })\n    };\n\n    const newUrl = this.url + '/create';\n    return this.http.post<Category>(newUrl,category,httpOptions)\n  }\n}\n","export class Category {\n    id: number;\n    name: string;\n    description: string;\n}","module.exports = \"\"","module.exports = \"<div class=\\\"conteiner\\\">\\n    <h2>Add Category</h2>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col\\\">\\n        <div>\\n          <label>Name:\\n            <input #name />\\n          </label>\\n        </div>\\n        <div>\\n          <label>Description:\\n            <input #description />\\n          </label>\\n        </div>\\n  \\n        <button class=\\\"btn btn-primary\\\" \\n        (click)=\\\"save(name.value,description.value);\\n        name.value='';description.value='';\\\">\\n          Add\\n        </button>\\n      </div>\\n  \\n      <div class=\\\"col card\\\" *ngIf=\\\"select\\\">\\n        <h2>Category Info</h2>\\n        <ul>\\n          <li><strong>Id:</strong> {{category.id}}</li>\\n          <li><strong>Name:</strong> {{category.name}}</li>\\n          <li><strong>Description:</strong> {{category.description}}</li>\\n        </ul>\\n      </div>\\n    </div>\\n  \\n    <h2>Categories List</h2>\\n  \\n    <table class=\\\"table\\\" *ngIf=\\\"categories\\\">\\n      <tr>\\n        <th scope=\\\"col\\\">Id</th>\\n        <th scope=\\\"col\\\">Name</th>\\n        <th scope=\\\"col\\\">Description</th>\\n      </tr>\\n      <tr *ngFor=\\\"let category of categories.data\\\" (click)=\\\"selectedItem(category.id)\\\">\\n        <td scope=\\\"row\\\">{{category.id}}</td>\\n        <td>{{category.name}}</td>\\n        <td>{{category.description}}</td>\\n      </tr>\\n    </table>\\n  </div>\"","import { Component, OnInit } from '@angular/core';\nimport { Category } from '../category';\nimport { CategoryService } from '../category.service';\n\n@Component({\n  selector: 'app-category',\n  templateUrl: './category.component.html',\n  styleUrls: ['./category.component.css']\n})\nexport class CategoryComponent implements OnInit {\n\n  categories: Category[];\n  select: boolean;\n  category: Category;\n  newCategory: Category;\n\n  constructor(private service: CategoryService) { }\n\n  ngOnInit() {\n    this.select=false;\n    this.category=null;\n    this.newCategory=new Category;\n    this.getAll();\n  }\n\n  getAll(): void {\n    this.service.getAll()\n    .subscribe(data => this.categories=data);\n  }\n\n  selectedItem(id: number): void {\n    this.service.getById(id)\n    .subscribe(data => {\n      this.category=data;\n      this.select=true;\n    });\n  }\n\n  save(name: string, description: string): void{\n    this.newCategory.name=name;\n    this.newCategory.description=description;\n    this.service.save(this.newCategory)\n    .subscribe(data => this.getAll());\n  }\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container text-center\\\">\\n  <div *ngIf=\\\"!userString\\\">\\n    <h1>Login</h1>\\n    <div>\\n      <label>Email:\\n        <input #email />\\n      </label>\\n    </div>\\n    <div>\\n      <label>Password:\\n        <input type=\\\"password\\\" #password />\\n      </label>\\n    </div>\\n    <div>\\n      <button class=\\\"btn btn-success\\\" \\n      (click)=\\\"login(email.value,password.value);\\n      email.value='';password.value='';\\\">\\n        Login\\n      </button>\\n    </div>\\n  </div>\\n  <div *ngIf=\\\"userString\\\">\\n    <h1>User:</h1>\\n    <h2>{{ userString }}</h2>\\n    <button class=\\\"btn btn-danger\\\"\\n    (click)=\\\"logout();\\\">\\n      Logout\\n    </button>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { UserService } from '../user.service';\nimport { User } from '../user';\n\n@Component({\n  selector: 'app-inicio',\n  templateUrl: './inicio.component.html',\n  styleUrls: ['./inicio.component.css']\n})\nexport class InicioComponent implements OnInit {\n\n  user: User;\n  userString: string;\n  tokenString: string;\n  token:{\n    access_token: string;\n    token_type: string;\n  }\n\n  aux: any;\n\n  constructor(private service: UserService) { }\n\n  ngOnInit() {\n    this.userString=sessionStorage.getItem(\"user\");\n  }\n\n  login(email: string,password: string):void{\n    this.service.login(email,password)\n    .subscribe(data => {\n      this.aux = data;\n      this.token = this.aux.data.token;\n      this.user=this.aux.data.user;\n      this.tokenString=this.token.token_type + ' ' + this.token.access_token;\n      sessionStorage.setItem(\"token\", this.tokenString);\n      sessionStorage.setItem(\"user\",this.user.name + ' ' + this.user.last_name);\n      this.userString=sessionStorage.getItem(\"user\");\n      sessionStorage.setItem(\"user_id\",this.user.id.toString());\n    });\n  }\n\n  logout(): void {\n    this.service.logout()\n    .subscribe(data => {\n      this.userString=null;\n      sessionStorage.removeItem(\"user\");\n      sessionStorage.removeItem(\"token\");\n      sessionStorage.removeItem(\"user_id\");\n    })\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient,HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Prediction } from './prediction';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PredictionService {\n\n  private url = 'http://35.231.37.9/api/predictions/';\n\n  constructor(private http: HttpClient) { }\n\n  getByUserId(): Observable<Prediction> {\n\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Authorization': sessionStorage.getItem(\"token\"),\n        'Content-Type': 'application/x-www-form-urlencoded'\n      })\n    };\n\n    const user_id = parseInt(sessionStorage.getItem(\"user_id\"));\n    const newUrl = this.url + user_id;\n    return this.http.get<Prediction>(newUrl,httpOptions);\n  }\n}\n","export class Prediction{\n    id: number;\n    user_id: number;\n    product_id: number;\n    beacon_id : number;\n}","module.exports = \"\"","module.exports = \"<div class=\\\"conteiner\\\">\\n    <h2>Add Prediction</h2>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col\\\">\\n        <div>\\n          <label>User:\\n            <input #user />\\n          </label>\\n        </div>\\n        <div>\\n          <label>Beacon:\\n            <input #beacon />\\n          </label>\\n        </div>\\n        <div>\\n          <label>Product:\\n            <select  #product  *ngIf=\\\"products\\\">\\n              <option *ngFor=\\\"let product of products.data\\\" value=\\\"{{product.id}}\\\">{{product.name}}</option>\\n            </select>\\n          </label>\\n        </div>\\n  \\n        <!--<button class=\\\"btn btn-primary\\\" \\n        (click)=\\\"save(user.value,beacon.value,product.value);\\n        user.value='';beacon.value='';\\\">\\n          Add\\n        </button>-->\\n      </div>\\n  \\n      <div class=\\\"col card\\\" *ngIf=\\\"select\\\">\\n        <h2>Prediction Info</h2>\\n        <ul>\\n          <li><strong>Id:</strong> {{prediction.id}}</li>\\n          <li><strong>User:</strong> {{prediction.user_id}}</li>\\n          <li><strong>Beacon:</strong> {{prediction.beacon_id}}</li>\\n          <li><strong>Product:</strong> {{prediction.product.name_id}}</li>\\n        </ul>\\n      </div>\\n    </div>\\n  \\n    <h2>Prediction List</h2>\\n  \\n    <table class=\\\"table\\\">\\n      <tr>\\n        <th scope=\\\"col\\\">Id</th>\\n        <th scope=\\\"col\\\">User</th>\\n        <th scope=\\\"col\\\">Beacon</th>\\n        <th scope=\\\"col\\\">Product</th>\\n      </tr>\\n      <tr *ngIf=\\\"prediction\\\" (click)=\\\"selectedItem(prediction.id)\\\"> <!--*ngFor=\\\"let prediction of predictions\\\"-->\\n        <td scope=\\\"row\\\">{{prediction.id}}</td>\\n        <td>{{prediction.user_id}}</td>\\n        <td>{{prediction.beacon_id}}</td>\\n        <td>{{prediction.product_id}}</td>\\n      </tr>\\n    </table>\\n  </div>\"","import { Component, OnInit } from '@angular/core';\nimport { Prediction } from '../prediction';\nimport { PredictionService } from '../prediction.service';\nimport { Product } from '../product';\nimport { ProductService } from '../product.service';\n\n@Component({\n  selector: 'app-prediction',\n  templateUrl: './prediction.component.html',\n  styleUrls: ['./prediction.component.css']\n})\nexport class PredictionComponent implements OnInit {\n\n  predictions: Prediction[];\n  select: boolean;\n  prediction: Prediction;\n  newPrediction: Prediction;\n  products: Product[];\n\n  constructor(private service: PredictionService, private productService: ProductService) { }\n\n  ngOnInit() {\n    this.select=false;\n    this.newPrediction=new Prediction;\n    this.getAll();\n    this.getAllProducts();\n  }\n\n  getAll(): void {\n    this.service.getByUserId()\n    .subscribe(data => {\n      this.prediction=data;\n    });\n  }\n\n  getAllProducts(): void {\n    this.productService.getAll()\n    .subscribe(data => {\n      this.products=data;\n    });\n  }\n\n  /*selectedItem(id: number): void {\n    this.service.getById(id)\n    .subscribe(data => {\n      this.prediction=data;\n      this.select=true;\n    });\n  }*/\n\n  save(user: string, product: string, beacon: string){\n    this.newPrediction.user_id=parseInt(user);\n    this.newPrediction.product_id=parseInt(product);\n    this.newPrediction.beacon_id=parseInt(beacon);\n    console.log(\"New Prediction:\",this.newPrediction);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient,HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Product } from './product';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProductService {\n\n  private url = 'http://35.231.37.9/api/products';\n\n  constructor(private http: HttpClient) { }\n\n  getAll(): Observable<Product[]> {\n    return this.http.get<Product[]>(this.url);\n  }\n\n  getById(id: number): Observable<Product> {\n    const newUrl = this.url + '/' + id;\n    return this.http.get<Product>(newUrl);\n  }\n\n  save(product: Product): Observable<Product>{\n\n    const newUrl = this.url + '/create';\n\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Authorization': sessionStorage.getItem(\"token\"),\n        'Content-Type': 'application/json'\n      })\n    };\n\n    return this.http.post<Product>(newUrl,product,httpOptions);\n  }\n}\n","import { Image } from \"./image\";\n\nexport class Product {\n    id: number;\n    name: string;\n    description: string;\n    size: string;\n    color: string;\n    category_id: number;\n    images: Image[]\n}","module.exports = \"\"","module.exports = \"<div class=\\\"conteiner\\\">\\n  <h2>Add Product</h2>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col\\\">\\n      <div>\\n        <label>Name:\\n          <input #name />\\n        </label>\\n      </div>\\n      <div>\\n        <label>Description:\\n          <input #description />\\n        </label>\\n      </div>\\n      <div>\\n        <label>Size:\\n          <input #size />\\n        </label>\\n      </div>\\n      <div>\\n        <label>Color:\\n          <input type=\\\"color\\\" #color />\\n        </label>\\n      </div>\\n      <div>\\n        <label>Category:\\n          <select  #category>\\n            <option *ngFor=\\\"let category of categories\\\" value=\\\"{{category.id}}\\\">{{category.name}}</option>\\n          </select>\\n        </label>\\n      </div>\\n\\n      <button class=\\\"btn btn-primary\\\" \\n      (click)=\\\"save(name.value,description.value,size.value,color.value,category.value);\\n      name.value='';description.value='';size.value='';\\\">\\n        Add\\n      </button>\\n    </div>\\n\\n    <div class=\\\"col card\\\" *ngIf=\\\"select\\\">\\n      <h2>Product Info</h2>\\n      <ul>\\n        <li><strong>Name:</strong> {{product.name}}</li>\\n        <li><strong>Description:</strong> {{product.description}}</li>\\n        <li><strong>Size:</strong> {{product.size}}</li>\\n        <li><strong>Color:</strong> {{product.color}}</li>\\n        <li><strong>Category:</strong> {{product.category_id}}</li>\\n        <li>\\n          <strong>Images:</strong>\\n          <ul>\\n            <li *ngFor=\\\"let image of product.images\\\">\\n              {{image.name}}\\n            </li>\\n          </ul>\\n        </li>\\n      </ul>\\n    </div>\\n  </div>\\n\\n  <h2>Product List</h2>\\n\\n  <table class=\\\"table\\\" *ngIf=\\\"products\\\">\\n    <tr>\\n      <th scope=\\\"col\\\">Id</th>\\n      <th scope=\\\"col\\\">Name</th>\\n      <th scope=\\\"col\\\">Size</th>\\n    </tr>\\n    <tr *ngFor=\\\"let product of products.data\\\" (click)=\\\"selectedItem(product.id)\\\">\\n      <td scope=\\\"row\\\">{{product.id}}</td>\\n      <td>{{product.name}}</td>\\n      <td>{{product.size}}</td>\\n    </tr>\\n  </table>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { Product } from '../product';\nimport { ProductService } from '../product.service';\nimport { Image } from '../image';\nimport { CategoryService } from '../category.service';\nimport { Category } from '../category';\n\n@Component({\n  selector: 'app-product',\n  templateUrl: './product.component.html',\n  styleUrls: ['./product.component.css']\n})\nexport class ProductComponent implements OnInit {\n\n  products: Product[];\n  select: boolean;\n  product: Product;\n  newProduct: Product;\n  categories: Category[];\n  aux: any;\n\n  constructor(private service: ProductService, private categoryService: CategoryService) { }\n\n  ngOnInit() {\n    this.getAllCategories();\n    this.select=false;\n    this.product=null;\n    this.newProduct = new Product;\n    this.getAll();\n  }\n\n  save(name: string, description: string, size: string, color: string, category: string): void{\n    this.newProduct.name=name;\n    this.newProduct.description=description;\n    this.newProduct.color=color;\n    this.newProduct.category_id=parseInt(category);\n    this.newProduct.size=size;\n    this.service.save(this.newProduct)\n    .subscribe(data => {\n      this.getAll();\n    });\n  }\n\n  getAllCategories(): void{\n    this.categoryService.getAll()\n    .subscribe(data => {\n      this.aux=data;\n      this.categories=this.aux.data;\n    });\n  }\n\n  getAll(): void{\n    this.service.getAll()\n    .subscribe(data => this.products=data);\n  }\n\n  selectedItem(id: number): void{\n    this.service.getById(id)\n    .subscribe(data => {\n      this.product=data;\n      this.select = true;\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient,HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { User } from './user';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  private url = '';\n  private logUrl = 'http://35.231.37.9/api/auth/login';\n  private logoutUrl = 'http://35.231.37.9/api/auth/logout';\n\n  constructor(private http: HttpClient) { }\n\n  getAll():Observable<User[]> {\n    return this.http.get<User[]>(this.url);\n  }\n\n  save(user: User): Observable<User> {\n    return this.http.post<User>(this.url,user);\n  }\n\n  getById(id: number): Observable<User>{\n    const newUrl = this.url + '/' + id;\n    return this.http.get<User>(newUrl);\n  }\n\n  login(email: string, password: string){\n    return this.http.post(this.logUrl, {email, password});\n  }\n\n  logout() {\n\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Authorization': sessionStorage.getItem(\"token\"),\n        'Content-Type': 'application/x-www-form-urlencoded'\n      })\n    };\n\n    return this.http.get(this.logoutUrl,httpOptions);\n  }\n}\n","export class User {\n    id: number;\n    name: string;\n    last_name: string;\n}","module.exports = \"\"","module.exports = \"<div class=\\\"conteiner\\\">\\n    <h2>Add User</h2>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col\\\">\\n        <div>\\n          <label>Name:\\n            <input #name />\\n          </label>\\n        </div>\\n        <div>\\n          <label>Last Name:\\n            <input #lastName />\\n          </label>\\n        </div>\\n        <button class=\\\"btn btn-primary\\\" (click)=\\\"save(name.value,lastName.value); name.value=''; lastName.value='';\\\">\\n          Add\\n        </button>\\n      </div>\\n  \\n      <div class=\\\"col card\\\" *ngIf=\\\"select\\\">\\n        <h2>User Info</h2>\\n        <ul>\\n          <li><strong>Name:</strong> {{user.name}}</li>\\n          <li><strong>Last Name:</strong> {{user.description}}</li>\\n        </ul>\\n      </div>\\n    </div>\\n  \\n    <h2>Users List</h2>\\n  \\n    <table class=\\\"table\\\" *ngIf=\\\"users\\\">\\n      <tr>\\n        <th scope=\\\"col\\\">Id</th>\\n        <th scope=\\\"col\\\">Name</th>\\n        <th scope=\\\"col\\\">Last Name</th>\\n      </tr>\\n      <tr *ngFor=\\\"let user of users.data\\\" (click)=\\\"selectedItem(user.id)\\\">\\n        <td scope=\\\"row\\\">{{user.id}}</td>\\n        <td>{{user.name}}</td>\\n        <td>{{user.last_name}}</td>\\n      </tr>\\n    </table>\\n  </div>\"","import { Component, OnInit } from '@angular/core';\nimport { User } from '../user';\nimport { UserService } from '../user.service';\n\n@Component({\n  selector: 'app-user',\n  templateUrl: './user.component.html',\n  styleUrls: ['./user.component.css']\n})\nexport class UserComponent implements OnInit {\n\n  users: User[];\n  select: boolean;\n  user: User;\n  newUser: User;\n\n  constructor(private service: UserService) { }\n\n  ngOnInit() {\n    this.select=false;\n    this.user=null;\n    this.newUser=new User;\n    this.getAll();\n  }\n\n  getAll(): void{\n    this.service.getAll()\n    .subscribe(data => this.users=data);\n  }\n\n  selectedItem(id: number): void{\n    this.service.getById(id)\n    .subscribe(data => {\n      this.user=data;\n      this.select=true;\n    });\n  }\n\n  save(name: string, last_name: string){\n    this.newUser.name=name;\n    this.newUser.last_name=last_name;\n    console.log(\"Nuevo Usuario:\", this.newUser);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}